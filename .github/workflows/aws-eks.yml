name: Deploy to EKS - CI/CD WorkFlow

on:
 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
 # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
      
    - uses: azure/setup-kubectl@v3
      with:
        version: 'v1.26.0' # default is latest stable
      id: install
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and push it to ECR 
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        
    - name: Update kube config
      run: aws eks update-kubeconfig --name VRSC --region us-east-2

    - name: Deploy image to Amazon EKS
      run: |
        kubectl apply -f eks/deployment.yaml --namespace=test
        kubectl apply -f eks/service.yaml --namespace=test
        kubectl apply -f eks/deployment.yaml --namespace=dev
        kubectl apply -f eks/service.yaml --namespace=dev
